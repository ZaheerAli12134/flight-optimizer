{"ast":null,"code":"var _jsxFileName = \"/home/paq/Desktop/airplane/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ResultsPage from './ResultsPage';\nimport LoadingPage from './LoadingPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Form state\n  const [numberOfCities, setNumberOfCities] = useState(2);\n  const [startCity, setStartCity] = useState('');\n  const [endCity, setEndCity] = useState('');\n  const [middleCities, setMiddleCities] = useState([]);\n  const [totalDays, setTotalDays] = useState(0);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [adults, setAdults] = useState(1);\n  const [children, setChildren] = useState(0);\n  const [infants, setInfants] = useState(0);\n\n  // Navigation state\n  const [currentPage, setCurrentPage] = useState('search');\n  const [searchData, setSearchData] = useState(null);\n\n  // City suggestions state - now just strings from backend\n  const [startCitySuggestions, setStartCitySuggestions] = useState([]);\n  const [endCitySuggestions, setEndCitySuggestions] = useState([]);\n  const [middleCitySuggestions, setMiddleCitySuggestions] = useState([[]]);\n\n  // Debounce refs\n  const startCityTimeoutRef = useRef(null);\n  const endCityTimeoutRef = useRef(null);\n  const middleCityTimeoutRefs = useRef({});\n\n  // API function to get city suggestions from backend\n  const fetchCitySuggestions = async query => {\n    if (query.length < 2) return [];\n    try {\n      console.log(`🔍 Fetching suggestions for: \"${query}\"`);\n      const response = await fetch(`http://localhost:8000/api/city-suggestions?query=${encodeURIComponent(query)}`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(`✅ Got suggestions from backend:`, data.suggestions);\n        return data.suggestions || [];\n      }\n    } catch (error) {\n      console.error('Error fetching city suggestions:', error);\n    }\n    return [];\n  };\n\n  // Update middle cities when number of cities changes\n  useEffect(() => {\n    const middleCitiesCount = Math.max(0, numberOfCities - 2);\n    if (middleCitiesCount > middleCities.length) {\n      const newMiddleCities = [...middleCities];\n      while (newMiddleCities.length < middleCitiesCount) {\n        newMiddleCities.push({\n          name: '',\n          days: 0\n        });\n      }\n      setMiddleCities(newMiddleCities);\n      setMiddleCitySuggestions(prev => {\n        const newSuggestions = [...prev];\n        while (newSuggestions.length < middleCitiesCount) {\n          newSuggestions.push([]);\n        }\n        return newSuggestions;\n      });\n    } else if (middleCitiesCount < middleCities.length) {\n      setMiddleCities(middleCities.slice(0, middleCitiesCount));\n      setMiddleCitySuggestions(prev => prev.slice(0, middleCitiesCount));\n    }\n  }, [numberOfCities, middleCities.length]);\n\n  // Update total days when middle city days change\n  useEffect(() => {\n    const total = middleCities.reduce((sum, city) => sum + city.days, 0);\n    setTotalDays(total);\n\n    // Auto-update end date when total days changes\n    if (startDate && total > 0) {\n      const start = new Date(startDate);\n      const end = new Date(start);\n      end.setDate(start.getDate() + total);\n      setEndDate(end.toISOString().split('T')[0]);\n    }\n  }, [middleCities, startDate]);\n\n  // City autocomplete functions with debouncing\n  const handleStartCityChange = async value => {\n    setStartCity(value);\n\n    // Clear previous timeout\n    if (startCityTimeoutRef.current) {\n      clearTimeout(startCityTimeoutRef.current);\n      startCityTimeoutRef.current = null;\n    }\n    if (value.length < 2) {\n      setStartCitySuggestions([]);\n      return;\n    }\n\n    // Set new timeout for API call\n    startCityTimeoutRef.current = setTimeout(async () => {\n      const suggestions = await fetchCitySuggestions(value);\n      setStartCitySuggestions(suggestions);\n    }, 300);\n  };\n  const handleEndCityChange = async value => {\n    setEndCity(value);\n\n    // Clear previous timeout\n    if (endCityTimeoutRef.current) {\n      clearTimeout(endCityTimeoutRef.current);\n      endCityTimeoutRef.current = null;\n    }\n    if (value.length < 2) {\n      setEndCitySuggestions([]);\n      return;\n    }\n    endCityTimeoutRef.current = setTimeout(async () => {\n      const suggestions = await fetchCitySuggestions(value);\n      setEndCitySuggestions(suggestions);\n    }, 300);\n  };\n  const handleMiddleCityChange = async (value, index) => {\n    const newMiddleCities = [...middleCities];\n    newMiddleCities[index].name = value;\n    setMiddleCities(newMiddleCities);\n\n    // Clear previous timeout for this index\n    if (middleCityTimeoutRefs.current[index]) {\n      clearTimeout(middleCityTimeoutRefs.current[index]);\n      middleCityTimeoutRefs.current[index] = null;\n    }\n    if (value.length < 2) {\n      const newSuggestions = [...middleCitySuggestions];\n      newSuggestions[index] = [];\n      setMiddleCitySuggestions(newSuggestions);\n      return;\n    }\n\n    // Set new timeout for API call\n    middleCityTimeoutRefs.current[index] = setTimeout(async () => {\n      const suggestions = await fetchCitySuggestions(value);\n      const newSuggestions = [...middleCitySuggestions];\n      newSuggestions[index] = suggestions;\n      setMiddleCitySuggestions(newSuggestions);\n    }, 300);\n  };\n  const handleMiddleDaysChange = (days, index) => {\n    const newMiddleCities = [...middleCities];\n    newMiddleCities[index].days = days;\n    setMiddleCities(newMiddleCities);\n  };\n  const selectCity = (city, type, index) => {\n    if (type === 'start') {\n      setStartCity(city);\n      setStartCitySuggestions([]);\n    } else if (type === 'end') {\n      setEndCity(city);\n      setEndCitySuggestions([]);\n    } else if (type === 'middle' && index !== undefined) {\n      const newMiddleCities = [...middleCities];\n      newMiddleCities[index].name = city;\n      setMiddleCities(newMiddleCities);\n      const newSuggestions = [...middleCitySuggestions];\n      newSuggestions[index] = [];\n      setMiddleCitySuggestions(newSuggestions);\n    }\n  };\n\n  // Extract IATA code from display text for backend\n  const extractIataCode = displayText => {\n    // Format: \"City (IATA) - Airport Name\"\n    const match = displayText.match(/\\(([A-Z]{3})\\)/);\n    return match ? match[1] : displayText;\n  };\n\n  // Date range validation\n  const handleStartDateChange = date => {\n    setStartDate(date);\n    // For 2 cities, set end date to same as start date (no stay duration needed)\n    if (date && numberOfCities === 2) {\n      setEndDate(date);\n    } else if (date && totalDays > 0) {\n      const start = new Date(date);\n      const end = new Date(start);\n      end.setDate(start.getDate() + totalDays);\n      setEndDate(end.toISOString().split('T')[0]);\n    }\n  };\n  const getMinDate = () => {\n    return new Date().toISOString().split('T')[0];\n  };\n  const getMaxDate = () => {\n    const maxDate = new Date();\n    maxDate.setFullYear(maxDate.getFullYear() + 1);\n    return maxDate.toISOString().split('T')[0];\n  };\n\n  // SEARCH FUNCTION - Extract IATA codes before sending to backend\n  const handleSearch = async () => {\n    if (!startCity || !endCity) {\n      alert('Please enter both start and end cities');\n      return;\n    }\n\n    // For 3+ cities, check if middle cities have days set\n    if (numberOfCities > 2 && totalDays === 0) {\n      alert('Please set stay durations for your middle cities');\n      return;\n    }\n    if (!startDate || !endDate) {\n      alert('Please select your travel dates');\n      return;\n    }\n\n    // For 2 cities, no need to validate date range since it's same day\n    if (numberOfCities > 2) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const actualDays = Math.ceil((end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24));\n      if (actualDays !== totalDays) {\n        alert(`Date range (${actualDays} days) must match total trip days (${totalDays} days)`);\n        return;\n      }\n    }\n\n    // Extract IATA codes from display text\n    const processedStartCity = extractIataCode(startCity);\n    const processedEndCity = extractIataCode(endCity);\n    const processedMiddleCities = middleCities.filter(city => city.name.trim() !== '').map(city => ({\n      ...city,\n      name: extractIataCode(city.name)\n    }));\n    const data = {\n      startCity: processedStartCity,\n      endCity: processedEndCity,\n      middleCities: processedMiddleCities,\n      totalDays: numberOfCities === 2 ? 0 : totalDays,\n      startDate,\n      endDate,\n      adults,\n      children,\n      infants\n    };\n    setCurrentPage('loading');\n    try {\n      console.log('Sending to FastAPI:', data);\n      const response = await fetch('http://localhost:8000/optimize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          start_city: processedStartCity,\n          end_city: processedEndCity,\n          middle_cities: processedMiddleCities,\n          total_days: numberOfCities === 2 ? 0 : totalDays,\n          start_date: startDate,\n          end_date: endDate,\n          adults: adults,\n          children: children,\n          infants: infants\n        })\n      });\n      const apiResults = await response.json();\n      console.log('Received from FastAPI:', apiResults);\n      setSearchData({\n        ...data,\n        apiResults: apiResults\n      });\n      setCurrentPage('results');\n    } catch (error) {\n      console.error('Error calling FastAPI:', error);\n      setSearchData({\n        ...data,\n        apiResults: []\n      });\n      setCurrentPage('results');\n    }\n  };\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (startCityTimeoutRef.current) {\n        clearTimeout(startCityTimeoutRef.current);\n      }\n      if (endCityTimeoutRef.current) {\n        clearTimeout(endCityTimeoutRef.current);\n      }\n      Object.values(middleCityTimeoutRefs.current).forEach(timeout => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n      });\n    };\n  }, []);\n\n  // Navigation check\n  if (currentPage === 'results' && searchData) {\n    return /*#__PURE__*/_jsxDEV(ResultsPage, {\n      searchData: searchData,\n      onNewSearch: () => setCurrentPage('search')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 12\n    }, this);\n  }\n  if (currentPage === 'loading' && searchData) {\n    return /*#__PURE__*/_jsxDEV(LoadingPage, {\n      searchData: searchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"Airplane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Find Your Optimal Travel Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Total Cities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: numberOfCities,\n            onChange: e => setNumberOfCities(Number(e.target.value)),\n            children: [2, 3, 4, 5, 6].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: [num, \" cities\"]\n            }, num, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autocomplete-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"e.g., London\",\n              value: startCity,\n              onChange: e => handleStartCityChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), startCitySuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestions-dropdown\",\n              children: startCitySuggestions.map((city, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggestion-item\",\n                onClick: () => selectCity(city, 'start'),\n                children: city\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autocomplete-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"e.g., Paris\",\n              value: endCity,\n              onChange: e => handleEndCityChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), endCitySuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestions-dropdown\",\n              children: endCitySuggestions.map((city, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggestion-item\",\n                onClick: () => selectCity(city, 'end'),\n                children: city\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), numberOfCities > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cities Between & Stay Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cities-container\",\n            children: middleCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city-with-days\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"autocomplete-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: `City ${index + 1}`,\n                  value: city.name,\n                  onChange: e => handleMiddleCityChange(e.target.value, index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 23\n                }, this), middleCitySuggestions[index] && middleCitySuggestions[index].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestions-dropdown\",\n                  children: middleCitySuggestions[index].map((cityName, cityIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-item\",\n                    onClick: () => selectCity(cityName, 'middle', index),\n                    children: cityName\n                  }, cityIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"days-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"30\",\n                  value: city.days,\n                  onChange: e => handleMiddleDaysChange(Number(e.target.value), index),\n                  className: \"number-input small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-days\",\n            children: [\"Total trip days: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: totalDays\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 34\n            }, this), totalDays === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"warning\",\n              children: \" (Set days for each city)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: startDate,\n            onChange: e => handleStartDateChange(e.target.value),\n            min: getMinDate(),\n            max: getMaxDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            min: startDate || getMinDate(),\n            max: getMaxDate(),\n            readOnly: numberOfCities > 2 // Only read-only for 3+ cities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-info\",\n            children: numberOfCities === 2 ? 'Direct flight (same day)' : totalDays > 0 ? `${totalDays} days total` : 'Set days first'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Passengers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passenger-selectors\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"passenger-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Adults:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: adults,\n                onChange: e => setAdults(Number(e.target.value)),\n                children: [1, 2, 3, 4, 5, 6, 7, 8].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"passenger-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Children:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: children,\n                onChange: e => setChildren(Number(e.target.value)),\n                children: [0, 1, 2, 3, 4, 5, 6].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"passenger-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Infants:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: infants,\n                onChange: e => setInfants(Number(e.target.value)),\n                children: [0, 1, 2, 3].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num,\n                  children: num\n                }, num, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: handleSearch,\n          children: \"Find Optimal Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"93ja7x+yd0DRX6/Utsg4wvpYlmc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ResultsPage","LoadingPage","jsxDEV","_jsxDEV","App","_s","numberOfCities","setNumberOfCities","startCity","setStartCity","endCity","setEndCity","middleCities","setMiddleCities","totalDays","setTotalDays","startDate","setStartDate","endDate","setEndDate","adults","setAdults","children","setChildren","infants","setInfants","currentPage","setCurrentPage","searchData","setSearchData","startCitySuggestions","setStartCitySuggestions","endCitySuggestions","setEndCitySuggestions","middleCitySuggestions","setMiddleCitySuggestions","startCityTimeoutRef","endCityTimeoutRef","middleCityTimeoutRefs","fetchCitySuggestions","query","length","console","log","response","fetch","encodeURIComponent","ok","data","json","suggestions","error","middleCitiesCount","Math","max","newMiddleCities","push","name","days","prev","newSuggestions","slice","total","reduce","sum","city","start","Date","end","setDate","getDate","toISOString","split","handleStartCityChange","value","current","clearTimeout","setTimeout","handleEndCityChange","handleMiddleCityChange","index","handleMiddleDaysChange","selectCity","type","undefined","extractIataCode","displayText","match","handleStartDateChange","date","getMinDate","getMaxDate","maxDate","setFullYear","getFullYear","handleSearch","alert","actualDays","ceil","getTime","processedStartCity","processedEndCity","processedMiddleCities","filter","trim","map","method","headers","body","JSON","stringify","start_city","end_city","middle_cities","total_days","start_date","end_date","apiResults","Object","values","forEach","timeout","onNewSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","e","Number","target","num","placeholder","onClick","cityName","cityIndex","min","readOnly","_c","$RefreshReg$"],"sources":["/home/paq/Desktop/airplane/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport ResultsPage from './ResultsPage';\nimport LoadingPage from './LoadingPage';\n\ninterface CityWithDays {\n  name: string;\n  days: number;\n}\n\ninterface SearchData {\n  startCity: string;\n  endCity: string;\n  middleCities: CityWithDays[];\n  totalDays: number;\n  startDate: string;\n  endDate: string;\n  adults: number;\n  children: number;\n  infants: number;\n  apiResults?: any[];\n}\n\nfunction App() {\n  // Form state\n  const [numberOfCities, setNumberOfCities] = useState(2);\n  const [startCity, setStartCity] = useState('');\n  const [endCity, setEndCity] = useState('');\n  const [middleCities, setMiddleCities] = useState<CityWithDays[]>([]);\n  const [totalDays, setTotalDays] = useState(0);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [adults, setAdults] = useState(1);\n  const [children, setChildren] = useState(0);\n  const [infants, setInfants] = useState(0);\n\n  // Navigation state\n  const [currentPage, setCurrentPage] = useState<'search' | 'loading' | 'results'>('search');\n  const [searchData, setSearchData] = useState<SearchData | null>(null);\n\n  // City suggestions state - now just strings from backend\n  const [startCitySuggestions, setStartCitySuggestions] = useState<string[]>([]);\n  const [endCitySuggestions, setEndCitySuggestions] = useState<string[]>([]);\n  const [middleCitySuggestions, setMiddleCitySuggestions] = useState<string[][]>([[]]);\n  \n  // Debounce refs\n  const startCityTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const endCityTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const middleCityTimeoutRefs = useRef<{[key: number]: NodeJS.Timeout | null}>({});\n\n  // API function to get city suggestions from backend\n  const fetchCitySuggestions = async (query: string): Promise<string[]> => {\n    if (query.length < 2) return [];\n    \n    try {\n      console.log(`🔍 Fetching suggestions for: \"${query}\"`);\n      const response = await fetch(`http://localhost:8000/api/city-suggestions?query=${encodeURIComponent(query)}`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(`✅ Got suggestions from backend:`, data.suggestions);\n        return data.suggestions || [];\n      }\n    } catch (error) {\n      console.error('Error fetching city suggestions:', error);\n    }\n    return [];\n  };\n\n  // Update middle cities when number of cities changes\n  useEffect(() => {\n    const middleCitiesCount = Math.max(0, numberOfCities - 2);\n    if (middleCitiesCount > middleCities.length) {\n      const newMiddleCities = [...middleCities];\n      while (newMiddleCities.length < middleCitiesCount) {\n        newMiddleCities.push({ name: '', days: 0 });\n      }\n      setMiddleCities(newMiddleCities);\n      setMiddleCitySuggestions(prev => {\n        const newSuggestions = [...prev];\n        while (newSuggestions.length < middleCitiesCount) {\n          newSuggestions.push([]);\n        }\n        return newSuggestions;\n      });\n    } else if (middleCitiesCount < middleCities.length) {\n      setMiddleCities(middleCities.slice(0, middleCitiesCount));\n      setMiddleCitySuggestions(prev => prev.slice(0, middleCitiesCount));\n    }\n  }, [numberOfCities, middleCities.length]);\n     \n  // Update total days when middle city days change\n  useEffect(() => {\n    const total = middleCities.reduce((sum, city) => sum + city.days, 0);\n    setTotalDays(total);\n    \n    // Auto-update end date when total days changes\n    if (startDate && total > 0) {\n      const start = new Date(startDate);\n      const end = new Date(start);\n      end.setDate(start.getDate() + total);\n      setEndDate(end.toISOString().split('T')[0]);\n    }\n  }, [middleCities, startDate]);\n\n  // City autocomplete functions with debouncing\n  const handleStartCityChange = async (value: string) => {\n    setStartCity(value);\n    \n    // Clear previous timeout\n    if (startCityTimeoutRef.current) {\n      clearTimeout(startCityTimeoutRef.current);\n      startCityTimeoutRef.current = null;\n    }\n    \n    if (value.length < 2) {\n      setStartCitySuggestions([]);\n      return;\n    }\n    \n    // Set new timeout for API call\n    startCityTimeoutRef.current = setTimeout(async () => {\n      const suggestions = await fetchCitySuggestions(value);\n      setStartCitySuggestions(suggestions);\n    }, 300);\n  };\n\n  const handleEndCityChange = async (value: string) => {\n    setEndCity(value);\n    \n    // Clear previous timeout\n    if (endCityTimeoutRef.current) {\n      clearTimeout(endCityTimeoutRef.current);\n      endCityTimeoutRef.current = null;\n    }\n    \n    if (value.length < 2) {\n      setEndCitySuggestions([]);\n      return;\n    }\n    \n    endCityTimeoutRef.current = setTimeout(async () => {\n      const suggestions = await fetchCitySuggestions(value);\n      setEndCitySuggestions(suggestions);\n    }, 300);\n  };\n\n  const handleMiddleCityChange = async (value: string, index: number) => {\n    const newMiddleCities = [...middleCities];\n    newMiddleCities[index].name = value;\n    setMiddleCities(newMiddleCities);\n\n    // Clear previous timeout for this index\n    if (middleCityTimeoutRefs.current[index]) {\n      clearTimeout(middleCityTimeoutRefs.current[index]!);\n      middleCityTimeoutRefs.current[index] = null;\n    }\n    \n    if (value.length < 2) {\n      const newSuggestions = [...middleCitySuggestions];\n      newSuggestions[index] = [];\n      setMiddleCitySuggestions(newSuggestions);\n      return;\n    }\n    \n    // Set new timeout for API call\n    middleCityTimeoutRefs.current[index] = setTimeout(async () => {\n      const suggestions = await fetchCitySuggestions(value);\n      const newSuggestions = [...middleCitySuggestions];\n      newSuggestions[index] = suggestions;\n      setMiddleCitySuggestions(newSuggestions);\n    }, 300);\n  };\n\n  const handleMiddleDaysChange = (days: number, index: number) => {\n    const newMiddleCities = [...middleCities];\n    newMiddleCities[index].days = days;\n    setMiddleCities(newMiddleCities);\n  };\n\n  const selectCity = (city: string, type: 'start' | 'end' | 'middle', index?: number) => {\n    if (type === 'start') {\n      setStartCity(city);\n      setStartCitySuggestions([]);\n    } else if (type === 'end') {\n      setEndCity(city);\n      setEndCitySuggestions([]);\n    } else if (type === 'middle' && index !== undefined) {\n      const newMiddleCities = [...middleCities];\n      newMiddleCities[index].name = city;\n      setMiddleCities(newMiddleCities);\n      \n      const newSuggestions = [...middleCitySuggestions];\n      newSuggestions[index] = [];\n      setMiddleCitySuggestions(newSuggestions);\n    }\n  };\n\n  // Extract IATA code from display text for backend\n  const extractIataCode = (displayText: string): string => {\n    // Format: \"City (IATA) - Airport Name\"\n    const match = displayText.match(/\\(([A-Z]{3})\\)/);\n    return match ? match[1] : displayText;\n  };\n\n  // Date range validation\n  const handleStartDateChange = (date: string) => {\n    setStartDate(date);\n    // For 2 cities, set end date to same as start date (no stay duration needed)\n    if (date && numberOfCities === 2) {\n      setEndDate(date);\n    } else if (date && totalDays > 0) {\n      const start = new Date(date);\n      const end = new Date(start);\n      end.setDate(start.getDate() + totalDays);\n      setEndDate(end.toISOString().split('T')[0]);\n    }\n  };\n\n  const getMinDate = () => {\n    return new Date().toISOString().split('T')[0];\n  };\n\n  const getMaxDate = () => {\n    const maxDate = new Date();\n    maxDate.setFullYear(maxDate.getFullYear() + 1);\n    return maxDate.toISOString().split('T')[0];\n  };\n\n  // SEARCH FUNCTION - Extract IATA codes before sending to backend\n  const handleSearch = async () => {\n    if (!startCity || !endCity) {\n      alert('Please enter both start and end cities');\n      return;\n    }\n\n    // For 3+ cities, check if middle cities have days set\n    if (numberOfCities > 2 && totalDays === 0) {\n      alert('Please set stay durations for your middle cities');\n      return;\n    }\n\n    if (!startDate || !endDate) {\n      alert('Please select your travel dates');\n      return;\n    }\n\n    // For 2 cities, no need to validate date range since it's same day\n    if (numberOfCities > 2) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      const actualDays = Math.ceil((end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24));\n      \n      if (actualDays !== totalDays) {\n        alert(`Date range (${actualDays} days) must match total trip days (${totalDays} days)`);\n        return;\n      }\n    }\n\n    // Extract IATA codes from display text\n    const processedStartCity = extractIataCode(startCity);\n    const processedEndCity = extractIataCode(endCity);\n    const processedMiddleCities = middleCities\n      .filter(city => city.name.trim() !== '')\n      .map(city => ({\n        ...city,\n        name: extractIataCode(city.name)\n      }));\n\n    const data: SearchData = {\n      startCity: processedStartCity,\n      endCity: processedEndCity,\n      middleCities: processedMiddleCities,\n      totalDays: numberOfCities === 2 ? 0 : totalDays,\n      startDate,\n      endDate,\n      adults,\n      children,\n      infants\n    };\n    \n    setCurrentPage('loading');\n    \n    try {\n      console.log('Sending to FastAPI:', data);\n      \n      const response = await fetch('http://localhost:8000/optimize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          start_city: processedStartCity,\n          end_city: processedEndCity,\n          middle_cities: processedMiddleCities,\n          total_days: numberOfCities === 2 ? 0 : totalDays,\n          start_date: startDate,\n          end_date: endDate,\n          adults: adults,\n          children: children,\n          infants: infants\n        })\n      });\n      \n      const apiResults = await response.json();\n      console.log('Received from FastAPI:', apiResults);\n      \n      setSearchData({\n        ...data,\n        apiResults: apiResults\n      });\n      setCurrentPage('results');\n      \n    } catch (error) {\n      console.error('Error calling FastAPI:', error);\n      setSearchData({\n        ...data,\n        apiResults: []\n      });\n      setCurrentPage('results');\n    }\n  };\n\n  // Cleanup timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (startCityTimeoutRef.current) {\n        clearTimeout(startCityTimeoutRef.current);\n      }\n      if (endCityTimeoutRef.current) {\n        clearTimeout(endCityTimeoutRef.current);\n      }\n      Object.values(middleCityTimeoutRefs.current).forEach(timeout => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n      });\n    };\n  }, []);\n\n  // Navigation check\n  if (currentPage === 'results' && searchData) {\n    return <ResultsPage searchData={searchData} onNewSearch={() => setCurrentPage('search')} />;\n  }\n\n  if (currentPage === 'loading' && searchData) {\n    return <LoadingPage searchData={searchData} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"logo\">Airplane</div>\n      </header>\n\n      <div className=\"search-container\">\n        <h2>Find Your Optimal Travel Route</h2>\n        \n        {/* First Row */}\n        <div className=\"search-row\">\n          <div className=\"input-group\">\n            <label>Total Cities</label>\n            <select \n              value={numberOfCities} \n              onChange={(e) => setNumberOfCities(Number(e.target.value))}\n            >\n              {[2, 3, 4, 5, 6].map(num => (\n                <option key={num} value={num}>{num} cities</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"input-group\">\n            <label>Start City</label>\n            <div className=\"autocomplete-container\">\n              <input \n                type=\"text\" \n                placeholder=\"e.g., London\"\n                value={startCity}\n                onChange={(e) => handleStartCityChange(e.target.value)}\n              />\n              {startCitySuggestions.length > 0 && (\n                <div className=\"suggestions-dropdown\">\n                  {startCitySuggestions.map((city, index) => (\n                    <div \n                      key={index} \n                      className=\"suggestion-item\"\n                      onClick={() => selectCity(city, 'start')}\n                    >\n                      {city}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <label>End City</label>\n            <div className=\"autocomplete-container\">\n              <input \n                type=\"text\" \n                placeholder=\"e.g., Paris\" \n                value={endCity}\n                onChange={(e) => handleEndCityChange(e.target.value)}\n              />\n              {endCitySuggestions.length > 0 && (\n                <div className=\"suggestions-dropdown\">\n                  {endCitySuggestions.map((city, index) => (\n                    <div \n                      key={index} \n                      className=\"suggestion-item\"\n                      onClick={() => selectCity(city, 'end')}\n                    >\n                      {city}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Middle Cities Row - Only show for 3+ cities */}\n        {numberOfCities > 2 && (\n          <div className=\"search-row\">\n            <div className=\"input-group\">\n              <label>Cities Between & Stay Duration</label>\n              <div className=\"cities-container\">\n                {middleCities.map((city, index) => (\n                  <div key={index} className=\"city-with-days\">\n                    <div className=\"autocomplete-container\">\n                      <input \n                        type=\"text\" \n                        placeholder={`City ${index + 1}`}\n                        value={city.name}\n                        onChange={(e) => handleMiddleCityChange(e.target.value, index)}\n                      />\n                      {middleCitySuggestions[index] && middleCitySuggestions[index].length > 0 && (\n                        <div className=\"suggestions-dropdown\">\n                          {middleCitySuggestions[index].map((cityName, cityIndex) => (\n                            <div \n                              key={cityIndex} \n                              className=\"suggestion-item\"\n                              onClick={() => selectCity(cityName, 'middle', index)}\n                            >\n                              {cityName}\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"days-input\">\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"30\"\n                        value={city.days}\n                        onChange={(e) => handleMiddleDaysChange(Number(e.target.value), index)}\n                        className=\"number-input small\"\n                      />\n                      <span>days</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"total-days\">\n                Total trip days: <strong>{totalDays}</strong>\n                {totalDays === 0 && <span className=\"warning\"> (Set days for each city)</span>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Dates Row */}\n        <div className=\"search-row\">\n          <div className=\"input-group\">\n            <label>Start Date</label>\n            <input \n              type=\"date\" \n              value={startDate}\n              onChange={(e) => handleStartDateChange(e.target.value)}\n              min={getMinDate()}\n              max={getMaxDate()}\n            />\n          </div>\n\n          <div className=\"input-group\">\n            <label>End Date</label>\n            <input \n              type=\"date\" \n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n              min={startDate || getMinDate()}\n              max={getMaxDate()}\n              readOnly={numberOfCities > 2} // Only read-only for 3+ cities\n            />\n            <div className=\"date-info\">\n              {numberOfCities === 2 ? 'Direct flight (same day)' : \n               totalDays > 0 ? `${totalDays} days total` : 'Set days first'}\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <label>Passengers</label>\n            <div className=\"passenger-selectors\">\n              <div className=\"passenger-type\">\n                <span>Adults:</span>\n                <select value={adults} onChange={(e) => setAdults(Number(e.target.value))}>\n                  {[1, 2, 3, 4, 5, 6, 7, 8].map(num => (\n                    <option key={num} value={num}>{num}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"passenger-type\">\n                <span>Children:</span>\n                <select value={children} onChange={(e) => setChildren(Number(e.target.value))}>\n                  {[0, 1, 2, 3, 4, 5, 6].map(num => (\n                    <option key={num} value={num}>{num}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"passenger-type\">\n                <span>Infants:</span>\n                <select value={infants} onChange={(e) => setInfants(Number(e.target.value))}>\n                  {[0, 1, 2, 3].map(num => (\n                    <option key={num} value={num}>{num}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <button className=\"search-button\" onClick={handleSearch}>\n            Find Optimal Route\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}